use Test;
use lib 'lib';

use Geo::Geometry;
use Geo::WellKnownText;

plan 37;

my $p  = Point.new(10, 20);
my $z  = PointZ.new(10, 20, 30);
my $m  = PointM.new(10, 20, 30);
my $zm = PointZM.new(10, 20, 30, 40);

my @examples = (
    'Point(10 10)',
    'PointZ(10 10 5)',
    'PointM(10 10 7)',
    'PointZM(10 10 5 7)',
    'LineString(10.01 10.3,20 20,30 50)',
    'LineStringz(4 1 0,4 1 0)',
    'LineStringm(4 1 0,4 1 0)',
    'LineStringZM(4 1 0 1,4 1 3 4)',
    'Polygon((10 10.1,10 20.2,20 20.3,20 15.4,19 19))',
    'Polygonz((10 10.1 5,10 20.2 5,20 20.3 5,20 15.4 5,19 19 5))',
    'PolygonM((10 10.1 7,10 20.2 7,20 20.3 7,20 15.4 7,19 19 7))',
    'PolygonZm((10 10.1 5 7,10 20.2 5 7,20 20.3 5 7,20 15.4 5 7,19 19 5 7))',
    'MultiPoint((10.01 10.3),(20 20),(30 50))',
    'MultiPointZ((10.01 10.3 5),(20 20 5),(30 50 5))',
    'MultiPointM((10.01 10.3 7),(20 20 7),(30 50 7))',
    'MultiPointZM((10.01 10.3 5 7),(20 20 5 7),(30 50 5 7))',
    'MultiPoint((10 10),(20 20))',
    'MultiPolygon(((10 10,10 20,20 20,20 15,10 10)),((60 60,70 70,80 60,60 60)))',
    'MultiPolygonZ(((10 10 5,10 20 5,20 20 5,20 15 5,10 10 5)),((60 60 5,70 70 5,80 60 5,60 60 5)))',
    'MultiPolygonM(((10 10 7,10 20 7,20 20 7,20 15 7,10 10 7)),((60 60 7,70 70 7,80 60 7,60 60 7)))',
    'MultiPolygonZM(((10 10 5 7,10 20 5 7,20 20 5 7,20 15 5 7,10 10 5 7)),((60 60 5 7,70 70 5 7,80 60 5 7,60 60 5 7)))',
    'MultiLineString((10 10,20 20),(15 15,30 15))',
    'MultiLineStringZ((10 10 5,20 20 5),(15 15 5,30 15 5))',
    'MultiLineStringM((10 10 7,20 20 7),(15 15 7,30 15 7))',
    'MultiLineStringZM((10 10 5 7,20 20 5 7),(15 15 5 7,30 15 5 7))',
    'GeometryCollection(Point(10 10),Point(30 30),LineString(15 15,20 20))',
    'GeometryCollectionZ(PointZ(10 10 5),PointZ(30 30 5),LineStringZ(15 15 5,20 20 5))',
    'GeometryCollectionM(PointM(10 10 7),PointM(30 30 7),LineStringM(15 15 7,20 20 7))',
    'GeometryCollectionZM(PointZM(10 10 5 7),PointZM(30 30 5 7),LineStringZM(15 15 5 7,20 20 5 7))',
# FROM UK OS:
    'MULTILINESTRING((464759.47000000003 1212349.74,464816.08 1212360.29))',
    'MULTILINESTRINGZ((464759.47000000003 1212349.74 0,464816.08 1212360.29 0))',
    'MULTILINESTRINGM((464759.47000000003 1212349.74 -1.7976931348623157e+308,464816.08 1212360.29 -1.7976931348623157e+308))',
    'MULTILINESTRINGZM((464759.47000000003 1212349.74 0 -1.7976931348623157e+308,464816.08 1212360.29 0 -1.7976931348623157e+308))',
    'MULTIPOLYGON(((461575.7 1218017.94,461575.69 1218047.54,461581.65 1218042.22,461574.69 1218047.54,461581.65 1218042.22,461583.24 1218039.27,461583.85000000003 1218035.77,461583.4 1218031.28,461581.82 1218026.57,461575.7 1218017.94)))',
    'MULTIPOLYGONZ(((461575.7 1218017.94 0,461575.69 1218047.54 0,461581.65 1218042.22 0,461574.69 1218047.54 0,461581.65 1218042.22 0,461583.24 1218039.27 0,461583.85000000003 1218035.77 0,461583.4 1218031.28 0,461581.82 1218026.57 0,461575.7 1218017.94 0)))',
    'MULTIPOLYGONM(((461575.7 1218017.94 -1.7976931348623157e+308,461575.69 1218047.54 -1.7976931348623157e+308,461581.65 1218042.22 -1.797693134868,461574.69 1218047.54 -1.7976931348623157e+308,461581.65 1218042.22 -1.7976931348623157e+308,461583.24 1218039.27 -1.7976931348623157e+308,461583.85000000003 1218035.77 -1.7976931348623157e+308,461583.4 1218031.28 -1.7976931348623157e+308,461581.82 1218026.57 -1.7976931348623157e+308,461575.7 1218017.94 -1.7976931348623157e+308)))',
    'MULTIPOLYGONZM(((461575.7 1218017.94 0 -1.7976931348623157e+308,461575.69 1218047.54 0 -1.7976931348623157e+308,461581.65 1218042.22 0 -1.797693134868,461574.69 1218047.54 0 -1.7976931348623157e+308,461581.65 1218042.22 0 -1.7976931348623157e+308,461583.24 1218039.27 0 -1.7976931348623157e+308,461583.85000000003 1218035.77 0 -1.7976931348623157e+308,461583.4 1218031.28 0 -1.7976931348623157e+308,461581.82 1218026.57 0 -1.7976931348623157e+308,461575.7 1218017.94 0 -1.7976931348623157e+308)))',
);

for @examples -> $ex {
    my $wkt = from-wkt($ex);
    is $ex.lc, $wkt.wkt.lc, 'roundtrip';
}
